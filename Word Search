class Solution {
    public boolean exist(char[][] board, String word) {
        
        
        for(int i=0; i<board.length; i++){
            for(int j=0; j< board[i].length; j++){
                
                if(board[i][j]==word.charAt(0) && DFS(i, j, word, board, 0)){
                    return true;
                }
            }
        }
        
        return false;
        
    }
    
    
    public boolean DFS(int i, int j, String word, char[][] board, int index){
        
        if(index==word.length())
            return true;
        
        if(i<0 || i>=board.length||j<0||j>=board[i].length||board[i][j]!=word.charAt(index)){
            return false;
        }
        
        
        char temp= board[i][j];
        board[i][j]= ' ';
            
        boolean found = DFS(i+1, j, word, board, index+1) ||
                        DFS(i-1, j, word, board, index+1)||
                       DFS(i, j+1, word, board, index+1) ||
                       DFS(i, j-1, word, board, index+1);
            
            
       board[i][j] = temp;
        
        return found;
    }
}
